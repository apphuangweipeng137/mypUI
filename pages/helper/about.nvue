<template>
	<view>
		<myp-navbar :lefts="leftIcons" title="关于我们" @leftAction="navLeftAction"></myp-navbar>
		<scroll-view class="myp-bg-page" :scroll-y="true" :style="mypContentHeightStyle">
			<view class="about-section" v-for="(item,idx) in items" :key="idx">
				<text class="about-section-title">{{item.title}}</text>
				<text class="about-section-desc">{{item.desc}}</text>
			</view>
			<view style="height: 120rpx;"></view>
		</scroll-view>
	</view>
</template>

<script>
	import contentBoxMixin from '@/mypUI/myp-mixin/contentBoxMixin.js'
	import navHelper from '@/router/navHelper.js'
	
	export default {
		mixins: [contentBoxMixin, navHelper],
		data() {
			return {
				items: [{
					title: '初衷',
					desc: `我是19年下半年的时候才开始使用uniapp的，最开始用的也是vue页面。后来出了nvue页面，我也是第一批使用的，感觉的确在app端体验舒爽很多。不过一开始的时候就躺了很多坑，因为总是喜欢把vue页面的内容搬到nvue页面上面。而且刚开始的时候文档上也有很多没有提到，我们相当于是一路测试/填坑过来的。当时还没有出nvue页面的组件库，官方的也还没有出，市面上其它付费/免费的也没有。当时就想做一套nvue的UI。一是自己的UI用起来顺手；二是想使用主题式的配置开发；三是想把一些开发过程中的注意事项以及初用者容易进的坑给一个文档或者解决方案；还有就是想尽可能的减少差异化的配置，真正做到一套代码输出所有端；而且我个人觉得一套组件，不需要那么多的组件，就提供一些常见的组件即可,更多的应该在于提供一种能力,一种快速开发各种页面类型的能力.当时出于这些想法，写了自己的一套UI,命名mypUI。`
				}, {
					title: '发展',
					desc: `在开发的过程中，因为觉得nvue页面的subNvue配置挺麻烦的（实际上我只看了一眼文档，没有动手去配置，可能当时感觉不喜欢这样去配置），所以决定了所有的页面采用自己的导航栏。而且又由于业务的需要（我们的应用是可变tabbar或者说是根据用户角色不同而内容不同的app，而用户可以切换角色），我们干脆也自定义了tabbar。一方面是业务的需求，另一方面的确是可控元素更多，更加灵活。更要命的是，当时很多人给出的nvue页面的弹窗实在是体验极差，在app端几乎没有动画效果，我们便搞了一套自己的popup/actionsheet。当然，因为我们的导航栏和tabbar都是自定义的，无法遮挡导航栏和tabbar的问题自然是没有的。而对于下拉刷新和上提加载而言，因为在vue页面的时候，我使用的是mescroll，后来在做这套UI的时候，mp和h5端参考了mescroll，不过直接改成了mixin的方式，对于位置和高度的控制更加灵活。其实这样就差不多主要的几大部分都出来了。现在mypUI经历过数次的更新,已经迈入了2.0时代,也支撑了很多的app与小程序开发.`
				}, {
					title: '道歉',
					desc: '不过因为只有我一个人在负责UI，而且平时也有开发任务。19年双十一的时候打算上线的，但因为一直没有写文档，也就一直没有上线。当时以为会很快写完文档的，没想到一直没有动，而且示范也没有写完。因为我在我发布的canvas和request以及one-input输入框插件下面有推广过mypUI，所以很多朋友来问是不是可以购买了。真的很抱歉，一直以来没有准备好。'
				}, {
					title: '后话',
					desc: '本UI永久免费使用。正如市面上那些人气很足的webUI一样，我们不会提供一大堆的业务组件。我始终觉得，去适配一个组件比去实现一个组件的成本要更高。提供几乎每一个项目里面都需要用到的组件以及能力就足够了。剩下的就交给用户自己自由发挥。本组件一直在坚持一套代码同时输出各端产品，而且app端还是weex对应的产品，不仅提高了开发效率，更是极大提升app的性能。而且我们一直在坚持几大原则：统一、规范、高效。这是我们的追求，也是我们价值的体现。感谢各位的使用，mypUI会越做越好。'
				}]
			}
		}
	}
</script>

<style lang="scss">
	
	
	.about {
		&-section {
			margin-left: 30rpx;
			margin-right: 30rpx;
			margin-top: 20rpx;
			
			&-title {
				font-size: 36rpx;
				line-height: 60rpx;
				color: $myp-text-color;
			}
			
			&-desc {
				font-size: 30rpx;
				line-height: 50rpx;
				color: $myp-text-color-second;
			}
		}
	}
</style>
